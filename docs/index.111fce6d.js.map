{"mappings":"imBAsBA,IAAuBA,EACDC,mJArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,yGCEzDC,EAAiB,SAAUC,EAAWC,EAAQC,GAC5C,GAAID,IAAWE,KAAKC,SAASH,OAG3B,OAAOD,EAGP,IAAIK,EAASH,EAAQ,UAAYL,KAAKS,UAAUN,GAAa,IAAM,iBAAmBH,KAAKS,UAAUN,GAAa,KAClH,OAAOO,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,GAAS,CAC5CK,KAAM,6BCVZ,IAAIC,EAAG,IAAAJ,IAAuBZ,EAAA,SAAAiB,QAA6C,SAAOC,OAAAC,KAAAC,KAClFC,EAAiBjB,EAAUY,EAAIM,WAAYN,EAAIV,QAAQ,GCFvD,MAAMiB,EAAS,IAAIC,OAAMH,GAInBI,EAAMC,SAASC,cAAc,QAEnC,GAAY,OAARF,EACF,MAAM,IAAI1B,MAAM,mBAGlBwB,EAAOK,iBAAiB,WAAWC,IACjCJ,EAAIK,aAAaJ,SAASK,eAAeF,EAAGG,KAAO,MAAOP,EAAIQ","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-60bbea27cfb15595.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-7e396b21f75e39eb.js","src/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"45kxC\\\":\\\"index.111fce6d.js\\\",\\\"3Kbom\\\":\\\"worker.e2917889.js\\\"}\"));","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3Kbom\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","const worker = new Worker(new URL('./worker.ts', import.meta.url), {\n  type: 'module',\n});\n\nconst pre = document.querySelector('#pre');\n\nif (pre === null) {\n  throw new Error('Not Implemented');\n}\n\nworker.addEventListener('message', ev => {\n  pre.insertBefore(document.createTextNode(ev.data + '\\n'), pre.firstChild);\n});\n"],"names":["$a0498038aab756c7$export$6503ec6e8aabbaf","$a0498038aab756c7$export$f7ad0328861e2f03","$a0498038aab756c7$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$8feb98e62083fdf4$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$837161ac67bea7e0$var$url","resolve","import","meta","url","$837161ac67bea7e0$exports","toString","$b10a9473d26d69ec$var$worker","Worker","$b10a9473d26d69ec$var$pre","document","querySelector","addEventListener","ev","insertBefore","createTextNode","data","firstChild"],"version":3,"file":"index.111fce6d.js.map"}